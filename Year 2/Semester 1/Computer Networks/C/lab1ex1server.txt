#include <stdio.h>
#include <unistd.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/ip.h>
#include <netinet/in.h>
#include <arpa/inet.h>

int main()
{
        struct sockaddr_in server,client;
        int  server_fd=socket(AF_INET,SOCK_STREAM,0);
        if(server_fd<0)
        {
                printf("nu i bine \n");
                return 1;
        }
        memset(&server,0,sizeof(server));
        server.sin_port=htons(1234);
        server.sin_family=AF_INET;
        server.sin_addr.s_addr=INADDR_ANY;
        if(bind(server_fd,(struct sockaddr*)&server,sizeof(server))<0)
        {
                printf("eroare la bind");
                return 1;
        }
        listen(server_fd,5);
        socklen_t size=sizeof(client);
        memset(&client,0,sizeof(client));
        while(1)
	{
                uint16_t array[100];
                uint16_t n,sum=0;
                printf("conect pls\n");
                int client_fd=accept(server_fd,(struct sockaddr*)&client,&size);
                if(client_fd<0)
                {
                        printf("eroare");
                        return 1;
                }
                recv(client_fd,&n,sizeof(uint16_t),0);
                n=ntohs(n);
                recv(client_fd,array,n*sizeof(uint16_t),0);
                for(int i=0;i<n;i++)
                {
                        sum+=ntohs(array[i]);
                }
                sum=htons(sum);
                send(client_fd,&sum,sizeof(sum),0);
                close(client_fd);
        }
}

